' @author EliasDH Team
' @see https://eliasdh.com
' @since 01/01/2025

@startuml HotelBookingSystemUseCase
!theme plain

title Use Case Diagram: Hotel Booking System

left to right direction

actor "Customer" as Customer
actor "Administrator" as Admin

rectangle "Booking System" {
  usecase "Add Hotel" as UC1
  usecase "Remove Hotel" as UC2
  usecase "Find Cheapest Hotel (Single Day)" as UC3
  usecase "Book Room in Specific Hotel (Single Day)" as UC4
  usecase "Book Room in Specific Hotel (Date Range)" as UC5
  usecase "Book Room in Cheapest Hotel (Date Range)" as UC6
  usecase "Check Room Availability (Single Day)" as UC7
  usecase "Check Room Availability (Date Range)" as UC8
}

Admin --> UC1
Admin --> UC2

Customer --> UC3
Customer --> UC4
Customer --> UC5
Customer --> UC6
Customer --> UC7
Customer --> UC8

UC6 ..> UC3 : <<include>>
UC6 ..> UC5 : <<include>>
UC4 ..> UC7 : <<include>>
UC5 ..> UC8 : <<include>>

note right of UC4 : Returns 0 on success, -1 on failure\n(invalid hotel/date/no availability)
note right of UC5 : Atomic booking for entire range\nReturns 0 on success, -1 on failure
note right of UC6 : Selects cheapest available hotel\nReturns hotel ID on success, -1 on failure
note bottom of UC7 : Returns first available room ID or -1
note bottom of UC8 : Returns first available room ID or -2 (invalid)

@enduml